install.packages("knitr")
require(knitr)
install.packages("Rcpp")
install.packages("demography")
install.packages("ggplot2")
install.packages("RODBC")
install.packages("Hmisc")
install.packages("mstate")
install.packages("lubridate")
install.packages("stringr")
install.packages("Amelia")
install.packages("hexbin")
install.packages("testthat")
install.packages("roxygen2")
install.packages("devtools")
install.packages("lme4")
install.packages("zipcode")
install.packages("spatstat")
install.packages("shiny")
install.packages("car")
install.packages(c("Cairo", "cairoDevice"))
install.packages(c("mapdata", "mapproj", "maptools"))
install.packages("UScensus2010")
install.packages("bayesSurv")
install.packages("data.table")
col <- c("#FFDA8B",
"#D9Ad3C",
"#96C573",
"#2F6880",
"#778071",
"#10475B")
plot(1:6, col = col, pch = 19, cex = 6)
install.packages("rlandscape")
getwd()
setwd("G:/CA data transfer files/R/Gregor")
?intToBin
require(R.utils)
install.package("R.utils")
install.packages("R.utils")
require(R.utils)
?intToBin
W <- sample(1:(2**m), k)
m <- 5
k <- 12
W <- sample(1:(2**m), k)
W
intToBin(W)
M <- matrix(intToBin(W), k, 1)
M
str(M)
strsplit(M)
strsplit(M, split = "")
W
a <- unlist(strsplit(M, ""))
a
a <- matrix(as.numeric(strsplit(intToBin(W), "")), k, m)
a <- matrix(as.numeric(unlist(strsplit(intToBin(W), ""))), k, m)
a <- matrix(as.numeric(unlist(strsplit(intToBin(W), ""))), k - 1, m)
W
a <- unlist(strsplit(intToBin(W), ""))
a
a <- matrix(unlist(strsplit(intToBin(W), "")))
a <- matrix(unlist(strsplit(intToBin(W), "")), nrow= k)
a
a <- matrix(as.numeric(unlist(strsplit(intToBin(W), ""))), nrow= k)
a
set.seed(47)
m <- 5
k <- 12
W <- sample(1:(2**m), k)
M <- matrix(as.numeric(unlist(strsplit(intToBin(W), ""))), nrow= k)
M
require(pocr)
resetwd()
ref_lookup_county
require(pocr)
require(pocr)
?here
here()
now()
?now
pop2000 <- read.table("S:/Data Portal/census_interpolation/zcta_pop_groups/zcta_pop_2000.tsv", header = T)
pop2010 <- read.table("S:/Data Portal/census_interpolation/zcta_pop_groups/zcta_pop_2010.tsv", header = T)
names(pop2000)[1] <- "zip"
names(pop2010)[2] <- "zip"
xx <- str_detect(pop2000$zip, pattern = fixed("XX"))
hh <- str_detect(pop2000$zip, pattern = fixed("HH"))
pop2000 <- pop2000[!(xx | hh), ]
pop2000$zip <- as.integer(as.character(pop2000$zip))
only_2010 <- setdiff(pop2000$zip, pop2010$zip)
only_2000 <- setdiff(pop2010$zip, pop2000$zip)
only_2010 <- setdiff(cdat2010$id2, cdat2000$id2)
only_2010 <- setdiff(pop2000$zip, pop2010$zip)
h(pop2000)
summary(pop2000$age)
summary(pop2000$cd_race_census)
class(pop2000$zip)
lapply(pop2000, class)
trendplot3
trend_plot3
require(extrafonts)
require(extrafont)
?font_install
install.packages(c("formatR", "GGally", "maptools", "markdown", "MASS", "munsell", "png"))
require(pocr)
install.packages(c("arm", "bitops", "class", "evaluate", "googleVis", "httpuv", "knitr", "lattice", "maps", "nlme", "RcppArmadillo", "rpart", "spatstat", "timereg"))
require(pocr)
20000/250
365/80
setwd("S:/Data Portal/county_reports/development")
require(pocr)
con <- odbcConnect("Annie")
install.packages("OpenStreetMap")
require(OpenStreetMap)
con <- odbcConnect("Annie")
setwd("S:/Data Portal/county_reports/development")
require(knitr)
knit2pdf("template_v9.Rnw", compiler = "xelatex")
knit2pdf("template_v9.Rnw", compiler = "xelatex")
require(pocr)
display_county <- "Pierce"
trend_date_type <- 1
odbcCloseAll()
con <- odbcConnect("Annie")
data_through_date <- sqlQuery(con, "select * from last_db_update")[1, 1] ## TODO build other dates off of this one
last_complete <- list()
last_complete$year <- year(data_through_date) - 1
ia_start_date <-  "2009-01-01"
ihs_start_date <- "2009-01-01"
ooh_start_date <- "2009-01-01"
context_date <- "2012-10-01" ## Using last quarter for context
context_date_string <- paste0("Quarter ", quarter(context_date), ", ", year(context_date))
ia_end_date <- ihs_end_date <- ooh_end_date <- "2012-12-01"
cohort_date <- "2010-01-01"
wb_start_date <- as.Date("2009-01-01")
wb_end_date <- as.Date(wb_start_date + duration(2, "years") - duration(1, "months"))
cohort_year <- year(cohort_date)
## Setting figure dimensions ----
fig_width <- 6
# Trend figure height is a*x + b where x is the number of graphs
trend_fig_a <- 1.1
trend_fig_b <- 2.3
# Context figure height is a_2 x_2 + a_1 x_1 + b where x_2 is the number of 2-liners and a_1 is the number of 1-liners
context_fig_a_2 <- 0.3
context_fig_a_1 <- 0.2
context_fig_b <- 1.2
## All subsequent chunks should be able to depend on this one alone. ----
require(xtable)
require(lubridate)
require(extrafont)
loadfonts(quiet = TRUE)
## xtable and ggplot options
options(xtable.NA.string = "NA")
dotplot_colors <- portal_colors[c(8, 4, 2)]
plot_title_size = 1.0 ## rel size
focus_county <- tolower(display_county)
focus_county_cd <- ref_lookup_county$county_cd[tolower(ref_lookup_county$county) == focus_county]
focus_info <- county_to_office(focus_county)
state_label <- "Washington"
omit_ooh_counties <- c("Garfield", "Lincoln", "San Juan", "Wahkiakum", "Skamania", "Columbia")
## Get relevant offices
focus_office <- sort(unique(focus_info$cd_office))
focus_office_tx <- sort(unique(as.character(focus_info$tx_office)))
focus_group <- sort(unique(county_to_office(focus_county)$cd_office_county_grp))
focus_group_tx <- sort(unique(as.character(focus_info$tx_office_county_grp)))
## Get counties in same region
region_cd <- ref_lookup_county$region_cd[ref_lookup_county$county_cd == focus_county_cd]
region_counties <- ref_lookup_county[ref_lookup_county$region_cd %in% ref_lookup_county[tolower(ref_lookup_county$county) == focus_county, 3], 1]
region_counties_tx <- ref_lookup_county$county[region_counties]
region_info <- do.call(rbind, county_to_office_v(region_counties))
region_offices <- sort(unique(region_info$cd_office))
region_groups <- sort(unique(region_info$cd_office_county_grp))
## Background info
context_year <- strsplit(context_date, "-")[[1]][1]
focus_pop_person <- sqlQuery(con, paste0("call sp_population_person(", focus_county_cd, ",", context_year, ");"))$total
focus_pop_house <- sqlQuery(con, paste0("call sp_population_household(", focus_county_cd, ",", context_year, ");"))$total
region_cd
paste0("call sp_population_person(", focus_county_cd, ",", context_year, ");")
sqlQuery(con, paste0("call sp_population_person(", focus_county_cd, ",", context_year, ");"))
focus_pop_person <- sqlQuery(con, paste0("call test_annie.sp_population_person(", focus_county_cd, ",", context_year, ");"))$total
context_year <- strsplit(context_date, "-")[[1]][1]
focus_pop_person <- sqlQuery(con, paste0("call test_annie.sp_population_person(", focus_county_cd, ",", context_year, ");"))$total
focus_pop_house <- sqlQuery(con, paste0("call test_annie.sp_population_household(", focus_county_cd, ",", context_year, ");"))$total
con_test <- odbcConncect("test_annie")
con_test <- odbcConnect("test_annie")
focus_pop_person <- sqlQuery(con_test, paste0("call sp_population_person(", focus_county_cd, ",", context_year, ");"))$total
focus_pop_house <- sqlQuery(con_test, paste0("call sp_population_household(", focus_county_cd, ",", context_year, ");"))$total
ia_call <- stored_procedure(sp = "poc2",
date = paste(ia_start_date, ia_end_date, sep = ","),
type = "counts",
office = focus_office)
ihs_call <- stored_procedure(sp = "poc3",
date = paste(ihs_start_date, ihs_end_date, sep = ","),
type = "counts",
office = focus_office)
ooh_call <- stored_procedure(sp = "poc1ab",
date = paste(ooh_start_date, ooh_end_date, sep = ","),
type = "counts",
county = focus_county)
ia_focus <- sqlQuery(con, ia_call)
ihs_focus <- sqlQuery(con, ihs_call)
ooh_focus <- sqlQuery(con, ooh_call)
names(ia_focus) <- tolower(names(ia_focus))
ia_focus <- ia_focus[ia_focus$date_type == trend_date_type &
ia_focus$qry_type_poc2 == 0,
c("period_start",
"total cases first day",
"dcfs office")]
ia_focus <- fill_in(ia_focus, value_name = "total cases first day", fill_value=0)
names(ihs_focus) <- tolower(names(ihs_focus))
ihs_trend_data <- ihs_focus[ihs_focus$date_type == trend_date_type &
ihs_focus$qry_type_poc3 == 0,
c("period_start", "total cases first day",
"dcfs office")]
ihs_trend_data <- fill_in(ihs_trend_data, value_name = "total cases first day")
if (display_county != "Lincoln") {
names(ooh_focus) <- tolower(names(ooh_focus))
ooh_focus <- ooh_focus[ooh_focus$date_type == trend_date_type & ooh_focus$qry_type_poc1 == 0,
c("month",
"total in care first day",
"county")]
ooh_focus <- fill_in(ooh_focus, value_name = "total in care first day", fill_value = 0)
}
#### Context Data ####
ia_region_call <- stored_procedure(sp = "poc2",
date = context_date,
type = "perCapita",
office = c(0, region_groups))
ihs_region_call <- stored_procedure(sp = "poc3",
date = context_date,
type = "perCapita",
office = c(0, region_groups))
ooh_region_call <- stored_procedure(sp = "poc1ab",
date = context_date,
type = "perCapita",
county = c(0, region_counties[region_counties %nin% omit_ooh_counties]))
ia_region <- sqlQuery(con, ia_region_call)
ihs_region <- sqlQuery(con, ihs_region_call)
ooh_region <- sqlQuery(con, ooh_region_call)
levels(ia_region$`DCFS Office Group`)[levels(ia_region$`DCFS Office Group`) == "All"] <- state_label
levels(ihs_region$`DCFS Office Group`)[levels(ihs_region$`DCFS Office Group`) == "All"] <- state_label
levels(ooh_region$County)[levels(ooh_region$County) == "All"] <- state_label
## Permanency Data  -- uses cohort_date
perm_call <- list()
perm_call[1] <- stored_procedure(sp = "discharge_exit_over_time_mr", date = cohort_date, county = c("all", focus_county)) # State level
perm_call[2] <- stored_procedure(sp = "discharge_exit_over_time", date = cohort_date, county = region_counties)
perm <- sqlQuery(con, perm_call[[1]])
names(perm) <- tolower(names(perm))
perm <- perm[, names(perm) %nin% c("age grouping", "gender", "race/ethnicity", "initial placement",
"last placement", "county")]
perm2 <- sqlQuery(con, perm_call[[2]])
names(perm2) <- names(perm)
perm <- rbind(perm, perm2)
perm <- perm[perm$date_type == 2, c("county_cd", "discharge_type_cd", "discharge type", "m12", "m24")]
names(perm)[3] <- "outcome"
perm$outcome <- factor(perm$outcome, levels = c("Reunification", "Adoption", "Guardianship", "Emancipation",
"Other", "Still in Out-of-Home Care"),
ordered = TRUE)
levels(perm$outcome)[6] <- "Still in Care"
perm$geo <- paste("Region", region_cd)
perm$geo[perm$county_cd == 0] <- state_label
perm$geo[perm$county_cd == focus_county_cd] <- paste(display_county, "County")
## IHS Safety
ihs_safety_call <- stored_procedure(sp = "PBCS3", date = cohort_date, office = c(0, focus_office))
ihs_safety_data <- sqlQuery(con, ihs_safety_call)
ihs_safety_data <- ihs_safety_data[ihs_safety_data$date_type == 2 &
ihs_safety_data$Months %in% c(12, 24),
c(4, 5, 7)]
levels(ihs_safety_data$Office)[levels(ihs_safety_data$Office) == "All"] <- state_label
ihs_safety_data <- dcast(ihs_safety_data, Office ~ Months, value.var = "Placed")
## OOH Safety
ooh_safety_call <- stored_procedure(sp = "PBCP5", date = cohort_date,
county = c(0, region_counties))
ooh_safety_data <- sqlQuery(con, ooh_safety_call)
ooh_safety_data <- ooh_safety_data[ooh_safety_data$date_type == 2,
c("County", "Discharge Type", "M24")]
levels(ooh_safety_data$County)[levels(ooh_safety_data$County) == "All"] <- state_label
ooh_safety_data <- dcast(ooh_safety_data, County ~ `Discharge Type`, value.var = "M24")
ooh_safety_data[, 2:4] <- round(ooh_safety_data[, 2:4], 1)
ooh_safety_data <- ooh_safety_data[order(-ooh_safety_data[, 4]), ]
for (i in 2:ncol(ooh_safety_data)) {
ooh_safety_data[!is.na(ooh_safety_data[, i]), i] <- paste0(ooh_safety_data[!is.na(ooh_safety_data[, i]), i], "%")
}
ooh_safety_data <- ooh_safety_data[, c(1, 4, 2, 3)]
wb_dates <- seq.Date(from = as.Date("2008-01-01"),
to = as.Date("2012-12-01"),
by = "month")
#county_arg <- c("pierce", "spokane", "all")
county_arg <- 0:39
wb_call <- stored_procedure(sp="PBCW3", date = wb_dates,
county = county_arg)
wb <- sqlQuery(con, wb_call)
names(wb) <- tolower(names(wb))
wb <- wb[, c("cohort begin date", "county", "family setting (kin placement)")]
wb_pop_call <- stored_procedure(sp="poc1ab", date = wb_dates,
county = county_arg)
wb_pop <- sqlQuery(con, wb_pop_call)
names(wb_pop) <- tolower(names(wb_pop))
wb_pop <- wb_pop[wb_pop$qry_type_poc1 == 0 & wb_pop$date_type == 1,
c("month", "county", "total in care first day")]
names(wb)[1] <- "month"
wb <- merge(wb, wb_pop, by= c("month", "county"))
wb_fn <- function(wb) {
sum(wb[, 3] * wb[, 4]) / sum(wb[, 4])
}
wb_5 <- ddply(wb, .variables= "county", .fun= wb_fn)
wb_context <- wb_5[wb_5$county %in% c(region_counties_tx[region_counties_tx %nin% omit_ooh_counties], "All"), , drop = TRUE]
levels(wb_context$county)[levels(wb_context$county) == "All"] <- state_label
wb_context$county <- reorder(wb_context$county, X=wb_context$V1)
wb_context$context_highlight <- ifelse(wb_context$county == display_county, 1, 0)
wb_context$context_highlight[wb_context$county == state_label] <- 2
wb_context$context_highlight <- factor(wb_context$context_highlight)
## Census Data Processing (for highilights and overview (appendix))
qf_focus <- quickfacts[c(which(quickfacts$text == display_county), 1), -1]
qf_table <- as.data.frame(t(qf_focus[, 2:ncol(qf_focus)]))
qf_print <- as.data.frame(qf_table)
names(qf_print) <- c(paste(display_county, "County"), "Washington")
row.names(qf_print) <- qf_dict[, 2]
qf_print[, 1] <- NA
qf_print[, 2] <- NA
qf_print[1, ] <- prettyNum(qf_table[1, ], format = "d", big.mark = ",",
preserve.width = "none")
qf_print[2:nrow(qf_table), 1] <- formatC(qf_table[2:nrow(qf_table), 1],
big.mark = ",", digits = 1, format = "f",
preserve.width = "individual")
qf_print[2:nrow(qf_table), 2] <- formatC(qf_table[2:nrow(qf_table), 2],
big.mark = ",", digits = 1, format = "f",
preserve.width = "individual")
pcts <- which(qf_dict$Unit == "PCT")
qf_print[pcts, 1] <- paste0(qf_print[pcts, 1], "%")
qf_print[pcts, 2] <- paste0(qf_print[pcts, 2], "%")
qf_print <- qf_print[-c(13, 15, 17), ]
## Highlights
hl_ooh <- sqlQuery(con, stored_procedure(sp="poc1ab", type="counts", date="2013-01-01", county = focus_county_cd, age=0:1))
hl_ooh <- hl_ooh[hl_ooh$qry_type_poc1 == 0 & hl_ooh$date_type == 0, c("Total In Care First Day", "Age_Grouping_Cd")]
hl_ia <- sqlQuery(con, stored_procedure(sp = "poc2", type = "counts", date = "2013-01-01", office = focus_office))
hl_ia <- sum(hl_ia[hl_ia$qry_type_poc2 == 0 & hl_ia$date_type == 0, c("Total Cases First Day")])
hl_ihs <- sqlQuery(con, stored_procedure(sp = "poc3", type = "counts", date = "2013-01-01", office = focus_office))
hl_ihs <- sum(hl_ihs[hl_ihs$qry_type_poc3 == 0 & hl_ihs$date_type == 0, c("Total Cases First Day")])
odbcCloseAll()
knit2pdf("template_v9.Rnw", compiler = "xelatex")
db
db <- "production"
db
if (db == "production")
print("ok")
db <- "production"
trend_date_type <- 1
odbcCloseAll()
if (db == "production") {
con <- odbcConnect("Annie")
con_test <- odbcConnect("test_annie")
}
if (db = "test") con <- odbcConnect("test_annie")
knit2pdf("template_v9.Rnw", compiler = "xelatex")
source('S:/Data Portal/poc_r_package/pocr/R/report_plotting.R', echo=TRUE)
knit2pdf("template_v9.Rnw", compiler = "xelatex")
ooh_safety_call <- stored_procedure(sp = "PBCP5", date = cohort_date,
county = c(0, region_counties))
ooh_safety_data <- sqlQuery(con, ooh_safety_call)
ooh_safety_data <- ooh_safety_data[ooh_safety_data$date_type == 2,
c("County", "Discharge Type", "M24")]
con <- odbcConnect("Annie")
ooh_safety_call <- stored_procedure(sp = "PBCP5", date = cohort_date,
county = c(0, region_counties))
ooh_safety_data <- sqlQuery(con, ooh_safety_call)
ooh_safety_data <- ooh_safety_data[ooh_safety_data$date_type == 2,
c("County", "Discharge Type", "M24")]
levels(ooh_safety_data$County)[levels(ooh_safety_data$County) == "All"] <- state_label
h(ooh_safety_data)
ooh_safety_call <- stored_procedure(sp = "PBCP5", date = cohort_date,
county = c(0, region_counties))
ooh_safety_data <- sqlQuery(con, ooh_safety_call)
ooh_safety_data <- ooh_safety_data[ooh_safety_data$date_type == 2 & ooh_safety_data$`Discharge Type` == "Reunification",
c("County", "Discharge Type", "M24")]
levels(ooh_safety_data$County)[levels(ooh_safety_data$County) == "All"] <- state_label
ooh_safety_data <- dcast(ooh_safety_data, County ~ `Discharge Type`, value.var = "M24")
ooh_safety_data
ooh_safety_data[, "Reunification"] <- round(ooh_safety_data[, "Reunification"], 1)
ooh_safety_data <- ooh_safety_data[order(-ooh_safety_data[, "Reunification"]), ]
for (i in 2:ncol(ooh_safety_data)) {
ooh_safety_data[!is.na(ooh_safety_data[, i]), i] <- paste0(ooh_safety_data[!is.na(ooh_safety_data[, i]), i], "%")
}
ooh_safety_data$County <- as.character(ooh_safety_data$County)
ooh_safety_data$County[ooh_safety_data$County == display_county] <- paste0("\\textbf{", display_county, "}")
ooh_safety_data$County[ooh_safety_data$County == state_label] <- paste0("\\textbf{", state_label, "}")
rownames(ooh_safety_data) <- ooh_safety_data$County
ooh_safety_cap <- paste('Percentage of Children Re-Entering Out-of-Home Care within Two Years of Exiting Out-of-Home Care,',
cohort_year,
"Exit Cohort")
print.xtable(xtable(ooh_safety_data[ooh_safety_data[, 1] %nin% omit_ooh_counties, -1],
caption = ooh_safety_cap,
align = c("l", "r")),
caption.placement = "top",
include.rownames = TRUE,
sanitize.rownames.function = as.character,
floating = TRUE,
booktabs = TRUE)
ooh_safety_data
class(ooh_safety_data)
print.xtable(xtable(ooh_safety_data[ooh_safety_data[, 1] %nin% omit_ooh_counties, -1, drop = FALSE],
caption = ooh_safety_cap,
align = c("l", "r")),
caption.placement = "top",
include.rownames = TRUE,
sanitize.rownames.function = as.character,
floating = TRUE,
booktabs = TRUE)
knit2pdf("template_v9.Rnw", compiler = "xelatex")
setwd("S:/Data Portal/county_reports/reports")
require(pocr)
require(brew)
require(knitr)
require(RCurl)
write_report <- function(county_arg, upload = FALSE){
Sys.setenv(PDFLATEX = "xelatex")
display_county <<- county_arg
rnw_file <- sprintf("county_report_%s.Rnw", county_arg)
brew("template.Rnw", rnw_file)
knit2pdf(rnw_file, compiler = "xelatex")
texi2pdf(file = str_replace(rnw_file, pattern = "Rnw", replacement = "tex"))
if (upload) {
pdf_file <- sprintf("county_report_%s.pdf", county_arg)
ftpUpload(what = pdf_file,
to = paste0("sftp://gregorp:PASSWORD@pocweb.cac.washington.edu/data/pocweb/www-review/county_reports/",
pdf_file))
}
}
omit_ooh_counties <- c("Garfield", "Lincoln", "San Juan", "Wahkiakum", "Skamania", "Columbia")
counties <- c("Cowlitz", "Clark", "Clallam", "Jefferson", "Thurston")
plyr::l_ply(counties, function(x) write_report(x, upload = FALSE))
require(tools)
plyr::l_ply(counties, function(x) write_report(x, upload = FALSE))
plyr::l_ply(counties, function(x) write_report(x, upload = FALSE))
omit_ooh_counties <- c("Garfield", "Lincoln", "San Juan", "Wahkiakum", "Skamania", "Columbia")
counties <- ref_lookup_county$county[1:39]
counties <- counties[counties %nin% omit_ooh_counties]
counties
write_report <- function(county_arg, upload = FALSE){
Sys.setenv(PDFLATEX = "xelatex")
display_county <<- county_arg
rnw_file <- sprintf("county_report_%s.Rnw", county_arg)
brew("template.Rnw", rnw_file)
knit2pdf(rnw_file, compiler = "xelatex")
texi2pdf(file = str_replace(rnw_file, pattern = "Rnw", replacement = "tex"))
if (upload) {
pdf_file <- sprintf("county_report_%s.pdf", county_arg)
ftpUpload(what = pdf_file,
to = paste0("sftp://gregorp:Obama the surfer@pocweb.cac.washington.edu/data/pocweb/www-review/county_reports/",
pdf_file))
}
}
plyr::l_ply(counties, function(x) write_report(x, upload = TRUE))
plyr::l_ply(counties, function(x) write_report(x, upload = FALSE))
?memory
?memory.limit
memory.size()
memory.limit()
memory.limit(max = T)
memory.size(max = T)
a <- matrix(NA, 10, 10)
class(a)
class(a[1, 1])
a <- matrix(NAL, 10, 10)
?NA
a <- matrix(NA_real_, 10, 10)
class(a[1, 1])
?gc
system.time(runif(10))
system.time(runif(1000))
system.time(for (i in 1:1000) runif(i))
system.time(runif(10000))
system.time(for (i in 1:10000) runif(i))
